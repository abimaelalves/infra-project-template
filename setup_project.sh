#!/bin/bash

# Pergunta o nome do projeto (ou usa o diret√≥rio atual como padr√£o)
read -p "Digite o nome do projeto (ou pressione Enter para usar o diret√≥rio atual): " PROJECT_NAME
PROJECT_NAME=${PROJECT_NAME:-$(basename "$PWD")}

echo "üìÇ Criando estrutura do projeto: $PROJECT_NAME ..."

# Criando estrutura de diret√≥rios
mkdir -p $PROJECT_NAME/{app,k8s,docker-local,scripts}

# Criando arquivos b√°sicos
touch $PROJECT_NAME/.gitignore
touch $PROJECT_NAME/README.md

# Criando estrutura da aplica√ß√£o com Dockerfile
touch $PROJECT_NAME/app/Dockerfile

# Criando README.md dentro de app/ com instru√ß√µes de build e push
cat <<EOL > $PROJECT_NAME/app/README.md
# üì¶ Guia para Criar, Buildar e Fazer Push de uma Imagem Docker

Este guia explica o passo a passo para criar uma imagem Docker, build√°-la localmente e envi√°-la para o Docker Hub.

## üõ†Ô∏è Pr√©-requisitos
Antes de come√ßar, certifique-se de ter:
- Docker instalado ([Instala√ß√£o do Docker](https://docs.docker.com/get-docker/))
- Uma conta no Docker Hub ([Criar conta](https://hub.docker.com/))
- Estar logado no Docker Hub via terminal

## üöÄ Passo a Passo

### **1Ô∏è‚É£ Criar um Dockerfile**
No diret√≥rio do seu projeto, crie um arquivo chamado \`Dockerfile\` e adicione as instru√ß√µes para construir a imagem. Exemplo b√°sico:

\`\`\`dockerfile
# Escolha uma imagem base adequada para seu projeto
FROM alpine:latest

# Definindo o diret√≥rio de trabalho dentro do container
WORKDIR /app

# Copiando os arquivos do projeto para dentro do container
COPY . .

# Comando de execu√ß√£o do container (ajuste conforme necess√°rio)
CMD ["sh"]
\`\`\`

Se for uma aplica√ß√£o espec√≠fica (por exemplo, Node.js, Python, Go), adapte a imagem base e os comandos de instala√ß√£o das depend√™ncias.

### **2Ô∏è‚É£ Fazer login no Docker Hub**
Para enviar a imagem ao Docker Hub, voc√™ precisa estar autenticado:
\`\`\`bash
docker login
\`\`\`
Digite seu **usu√°rio** e **senha** quando solicitado.

### **3Ô∏è‚É£ Buildar a imagem Docker**
No diret√≥rio onde est√° o \`Dockerfile\`, execute o seguinte comando para construir a imagem:
\`\`\`bash
docker build -t <seu-usuario-docker>/<nome-da-imagem>:<tag> .
\`\`\`
Exemplo:
\`\`\`bash
docker build -t meuusuario/meu-projeto:latest .
\`\`\`

### **4Ô∏è‚É£ Verificar a imagem criada**
Ap√≥s o build, verifique se a imagem foi criada corretamente:
\`\`\`bash
docker images
\`\`\`
Isso listar√° todas as imagens dispon√≠veis localmente.

### **5Ô∏è‚É£ Criar uma tag (Opcional)**
Se precisar renomear ou versionar a imagem antes de enviar:
\`\`\`bash
docker tag meuusuario/meu-projeto:latest meuusuario/meu-projeto:v1.0
\`\`\`

### **6Ô∏è‚É£ Fazer push da imagem para o Docker Hub**
Agora, envie a imagem para o Docker Hub:
\`\`\`bash
docker push <seu-usuario-docker>/<nome-da-imagem>:<tag>
\`\`\`
Exemplo:
\`\`\`bash
docker push meuusuario/meu-projeto:latest
\`\`\`

### **7Ô∏è‚É£ Verificar a imagem no Docker Hub**
Acesse seu [Docker Hub](https://hub.docker.com/) e verifique se a imagem foi enviada corretamente.

### **8Ô∏è‚É£ Como puxar a imagem em outro ambiente**
Se precisar usar essa imagem em outro local (ex: servidor ou Kubernetes), basta rodar:
\`\`\`bash
docker pull <seu-usuario-docker>/<nome-da-imagem>:<tag>
\`\`\`
Exemplo:
\`\`\`bash
docker pull meuusuario/meu-projeto:latest
\`\`\`

## üìù Conclus√£o
Agora voc√™ sabe como criar, buildar e enviar uma imagem Docker para o Docker Hub! üöÄ
EOL

# Criando estrutura Kubernetes apenas com o essencial
touch $PROJECT_NAME/k8s/{app-deployment.yaml,app-service.yaml,app-ingress.yaml}

# Criando estrutura para containers locais
touch $PROJECT_NAME/docker-local/docker-compose.yml

# Mensagem final
echo "‚úÖ Estrutura criada com sucesso em: $PROJECT_NAME"
echo "Agora basta adicionar seus arquivos dentro das pastas conforme necess√°rio."
